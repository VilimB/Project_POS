// <auto-generated />
using System;
using Backend_POS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_POS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241015153116_Migration10")]
    partial class Migration10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend_POS.Models.DbSet.Kupac", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("KupacId"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mjesto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NazivKupac")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SifraKupac")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("KupacId");

                    b.HasIndex("SifraKupac")
                        .IsUnique();

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProizvodId"));

                    b.Property<decimal>("CijenaProizvod")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("JedinicaMjere")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NazivProizvod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SifraProizvod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Stanje")
                        .HasColumnType("int");

                    b.HasKey("ProizvodId");

                    b.HasIndex("SifraProizvod")
                        .IsUnique();

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Racun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("XmlRacun")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ZaglavljeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KupacId");

                    b.HasIndex("ZaglavljeId")
                        .IsUnique();

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.StavkeRacuna", b =>
                {
                    b.Property<int>("StavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StavkaId"));

                    b.Property<decimal>("CijenaStavka")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IznosPopusta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<decimal>("Popust")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.Property<int?>("RacunId")
                        .HasColumnType("int");

                    b.Property<decimal>("Vrijednost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ZaglavljeId")
                        .HasColumnType("int");

                    b.HasKey("StavkaId");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("RacunId");

                    b.HasIndex("ZaglavljeId");

                    b.ToTable("StavkeRacuna");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.ZaglavljeRacuna", b =>
                {
                    b.Property<int>("ZaglavljeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ZaglavljeId"));

                    b.Property<int>("Broj")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("XmlRacun")
                        .HasColumnType("longtext");

                    b.HasKey("ZaglavljeId");

                    b.HasIndex("Broj")
                        .IsUnique();

                    b.HasIndex("KupacId");

                    b.ToTable("ZaglavljeRacuna");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8aeef66c-8d29-4076-80f8-2a1b83d380b2",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "e6c65c75-96fa-41c8-9b9b-3088fc98c9de",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Racun", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_POS.Models.DbSet.ZaglavljeRacuna", "ZaglavljeRacuna")
                        .WithOne()
                        .HasForeignKey("Backend_POS.Models.DbSet.Racun", "ZaglavljeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("ZaglavljeRacuna");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.StavkeRacuna", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.Proizvod", "Proizvod")
                        .WithMany("StavkeRacunas")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_POS.Models.DbSet.Racun", null)
                        .WithMany("Stavke")
                        .HasForeignKey("RacunId");

                    b.HasOne("Backend_POS.Models.DbSet.ZaglavljeRacuna", "ZaglavljeRacuna")
                        .WithMany("StavkeRacunas")
                        .HasForeignKey("ZaglavljeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");

                    b.Navigation("ZaglavljeRacuna");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.ZaglavljeRacuna", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.Kupac", "Kupac")
                        .WithMany("ZaglavljeRacunas")
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_POS.Models.DbSet.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Backend_POS.Models.DbSet.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Kupac", b =>
                {
                    b.Navigation("ZaglavljeRacunas");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Proizvod", b =>
                {
                    b.Navigation("StavkeRacunas");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.Racun", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Backend_POS.Models.DbSet.ZaglavljeRacuna", b =>
                {
                    b.Navigation("StavkeRacunas");
                });
#pragma warning restore 612, 618
        }
    }
}
